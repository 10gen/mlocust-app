Resource.Property,Property Type,Optional/Required,Generator,Notes
IncrementalId,String,Required,"ID(""M-"")","calls the ID function in fakerutil.py that just increments an int value and appends"
arrayOfStandardDataTypes,String,Required,fake.random_letters(length=5),"Creating simple arrays using standard data types are not that simple for pyfaker. You can do array of objects easily. Pyfaker only returns lists for random_choices, random_elements, random_letters, and random_sample afaik."
currArraySize,Number,Required,setArraySize(10),"Setting current max array size to 10"
arrayUsingCurrArraySize().randomInt,Number,Required,fake.random_digit_not_null(),"Show that this array will not exceed currArraySize"
newCurrArraySize,Number,Required,setArraySize(2),"Setting current max array size to 2"
newArrayUsingCurrArraySize().randomInt,Number,Required,fake.random_digit_not_null(),"Show that this array will not exceed the new currArraySize"
Last,String,Required,fake.last_name(),Random
First,String,Optional,fake.first_name(),Random
Suffix,String,Optional,fake.suffix(),Random
locations().cities,String,Required,"fake.random_elements(('Philadelphia', 'New York', 'Atlanta', 'Chicago', 'Seattle', 'Los Angeles'), unique=True)","Array of sections with a string array of unique cities"
randomSentence,String,Required,"fake.paragraph(nb_sentences=1)",Random
item.imagelink,String,Required,fake.image_url(),"Item object with an image url"
item.notes,String,Optional,fake.text(max_nb_chars=80),"ipsum lorem"
item.quantity,Number,Optional,fake.random_digit_not_null(),Random
Address().name,String,Optional,"fake.random_element(('Main', 'Summer', 'Old'))","Example of an array of address objects"
Address().addressLine1,String,Optional,fake.street_address(),Random
Address().addressLine2,String,Optional,fake.secondary_address(),Random
Address().city,String,Optional,fake.city(),Random
Address().state,String,Optional,fake.state_abbr(),Random
Address().postalCode,String,Optional,fake.postcode(),Random
Address().country,String,Optional,fake.country(),US
Address().EffDt,date,Optional,fake.past_datetime(),Random
Address().EndDt,date,Optional,"fake.future_datetime(end_date=""+3y"")",Random
Address().wheelchairAccess,boolean,Optional,fake.boolean(chance_of_getting_true=10),"True, False"
geo.type,String,Optional,"'points'","Example of geospatial coords"
geo.coordinates,Decimal,Optional,"[float(str(fake.longitude())),float(str(fake.latitude()))]",Random
Communication.Phone().phoneNumber,String,Optional,fake.phone_number(),Random
Communication.Phone().type,String,Optional,"fake.random_element(('Home', 'Work', 'Cell', 'Fax', 'Pager'))","Home, Work, Cell, Fax, Pager"
Communication.Email().emailAddress,String,Optional,fake.email(),Random
Communication.Email().type,String,Optional,"fake.random_element(('Home', 'Work'))","Home, Work"
Communication.SocialMedia().SocialMediaID,String,Optional,fake.user_name(),Random
Communication.SocialMedia().SocialMediaType,String,Optional,"fake.random_element(('Facebook', 'Academia.edu', 'Bebo', 'CaringBridge', 'GoodReads', 'DailyStrength', 'Google+'))","Facebook, Academia.edu, Bebo, CaringBridge, GoodReads, DailyStrength, Google+"
SSN,String,Optional,fake.ssn(),Random
DOB,date,Required,fake.past_datetime(start_date='-70y'),Random
BankAccount.Name,String ,Optional,fake.company(),Random
BankAccount.AccountHolderName,String ,Optional,fake.name(),Random
BankAccount.AccountNumber,String ,Optional,fake.iban(),Random
BankAccount.AccountType,String ,Optional,"fake.random_element(('Checking', 'Savings'))",Random
BankAccount.RoutingNumber,String ,Optional,fake.iban(),Random
Weight,Integer,Optional,"fake.random_int(min=1, max=400)",1 - 400
